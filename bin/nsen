#!/usr/bin/php
<?php

// before any application gets loaded lets pull a list of defined
// classes to pretend that all of those will have php manual entries.

$GLOBALS['SenseiBuiltinData'] = [
	'Classes'    => get_declared_classes(),
	'Interfaces' => get_declared_interfaces(),
	'Traits'     => get_declared_traits()
];

require('vendor/autoload.php');

use Nether\Console\Meta\Command;
use Nether\Console\Meta\Info;
use Nether\Console\Meta\Arg;
use Nether\Console\Meta\Toggle;
use Nether\Console\Meta\Value;
use Nether\Console\Meta\Error;

class App
extends Nether\Console\Client {

	#[Nether\Console\Meta\Command]
	#[Nether\Console\Meta\Toggle('--nether')]
	public function
	Build():
	int {

		$IncludeNether = $this->GetOption('nether') ?? FALSE;

		////////

		if($IncludeNether) {
			$SearchPath = sprintf('%s/vendor/netherphp', getcwd());
			$VendorDir = new FilesystemIterator($SearchPath);

			foreach($VendorDir as $Item)
			if($Item->IsDir())
			$this->Args->Inputs->Push(sprintf(
				'%s/src',
				$Item->GetRealPath()
			));

		}

		////////

		$this->Compile();
		$this->Dump();

		return 0;
	}

	#[Nether\Console\Meta\Command]
	#[Nether\Console\Meta\Arg('path')]
	#[Nether\Console\Meta\Error(1, 'No path specified.')]
	public function
	Compile():
	int {

		$Path = $this->GetInput(1) ?? NULL;
		$Outfile = $this->GetOption('out') ?? 'sensei-data.phson';
		$Name = $this->GetOption('name') ?? 'Project';
		$BIFile = $this->GetOption('biout') ?? 'sensei-builtin.phson';

		if(!$Path)
		$this->Quit(1);

		////////

		$Codebase = new Nether\Sensei\Codebase;
		$Codebase->Name = $Name;

		foreach($this->Args->Inputs as $Path) {
			if(!is_dir($Path))
			continue;

			foreach(new Nether\Sensei\Indexers\FileIndexer($Path) as $File) {
				$Code = Nether\Sensei\Indexers\CodeIndexer::FromFile($File);
				$Codebase->BakeClasses($Code->Classes);
			}
		}

		$Codebase->BakeNamespaces();

		//print_r($Codebase->Classes->Keys());
		//print_r($Codebase->Namespaces->Keys());

		file_put_contents(
			$Outfile,
			serialize($Codebase)
		);

		file_put_contents(
			$BIFile,
			serialize($GLOBALS['SenseiBuiltinData'] )
		);

		return 0;
	}

	#[Nether\Console\Meta\Command]
	#[Nether\Console\Meta\Info('Dump the codebase as data files.')]
	public function
	Dump():
	int {

		$Root = getcwd();
		$Infile = ($this->GetOption('in') ?? "{$Root}/sensei-data.phson");
		$Outdir = ($this->GetOption('out') ?? "{$Root}/docs/phson");

		if(!file_exists($Infile))
		$this->Quit(1);

		$this
		->PrintLn("Input: {$Infile}")
		->PrintLn("Output: {$Outdir}");

		try {
			$Codebase = unserialize(file_get_contents($Infile));
			$Codebase->RenderPhsonFiles($Outdir);
		}

		catch(Throwable $Err) {
			throw $Err;
			echo $Err->GetMessage(), PHP_EOL;
			return 1;
		}

		return 0;
	}

};

exit((new App)->Run());
